{"version":3,"sources":["sound/alarm.mp3","components/Timer/Timer.jsx","components/InputCountdown/InputCountdown.jsx","components/Countdown/Countdown.jsx","components/App/App.jsx"],"names":["module","exports","Timer","props","timerControl","delay","state","isPlay","timeInMs","startFromMs","startTime","Date","now","timerId","setInterval","setState","clearInterval","resetTimer","onStartClick","timeView","time","digits","toString","slice","timeCount","timeInSec","ms","Math","floor","sec","min","this","btnText","className","type","onClick","danger","React","Component","InputCountdown","setTimeValue","onChange","onChangeMinField","value","maxTimeInMin","currentMin","trunc","newTimeInSec","onChangeSecField","onSliderChange","maxSliderInSec","startTimeInSec","isStarted","minutes","seconds","name","defaultValue","max","disabled","step","defaultProps","timerSound","require","Countdown","countdown","countdownId","play","start","reset","onChangeTime","progressBar","onePercent","Audio","progress","gutter","span","strokeLinecap","percent","TabPane","Tabs","App","defaultActiveKey","tab","key","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8f4bdfe8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alarm.b3631705.mp3\";","import React from 'react';\nimport { Button, Space } from 'antd';\nimport './Timer.scss';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeInMs: 0,\n      isPlay: false,\n      startFromMs: 0,\n    };\n    this.timerId = null;\n  }\n\n  timerControl = (delay) => {\n    const { isPlay, timeInMs, startFromMs } = this.state;\n    const startTime = Date.now();\n\n    if (!isPlay) {\n      this.timerId = setInterval(() => {\n        this.setState({ timeInMs: Date.now() + startFromMs - startTime });\n      }, delay);\n    }\n\n    if (isPlay) {\n      clearInterval(this.timerId);\n      this.setState({ isPlay: false, startFromMs: timeInMs });\n    }\n  };\n\n  resetTimer = () => {\n    clearInterval(this.timerId);\n    this.setState({ isPlay: false, timeInMs: 0, startFromMs: 0 });\n  };\n\n  onStartClick = () => {\n    this.setState(({ isPlay }) => ({ isPlay: !isPlay }));\n    this.timerControl(10);\n  };\n\n  timeView = (time, digits) => {\n    const result = ((time < 10) ? `0${time}` : time);\n    return result.toString().slice(-digits);\n  };\n\n  timeCount = (timeInSec) => {\n    const ms = Math.floor(timeInSec / 10);\n    let time = timeInSec;\n    time = (time - (time % 1000)) / 1000;\n    const sec = time % 60;\n    time = (time - sec) / 60;\n    const min = time % 60;\n    return `${this.timeView(min)}:${this.timeView(sec)}:${this.timeView(ms, 2)}`;\n  };\n\n  render() {\n    const { timeInMs, isPlay } = this.state;\n    const btnText = isPlay ? 'Pause' : 'Play';\n    return (\n      <div>\n        <div className=\"timer__value\">\n          { this.timeCount(timeInMs) }\n        </div>\n        <div className=\"timer\">\n          <Space>\n            <Button type=\"primary\" className=\"timer__btn\" onClick={this.onStartClick}>{btnText}</Button>\n            <Button type=\"primary\" className=\"timer__btn\" danger onClick={this.resetTimer}>Reset</Button>\n          </Space>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Slider, InputNumber, Space } from 'antd';\n\nclass InputCountdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeInSec: 0,\n    };\n  }\n\n  setTimeValue = (timeInSec) => {\n    const { onChange } = this.props;\n    if (onChange) onChange(timeInSec);\n  };\n\n  onChangeMinField = (value) => {\n    const min = value || 0;\n    const { maxTimeInMin } = this.props;\n\n    this.setState(({ timeInSec }) => {\n      const currentMin = Math.trunc(timeInSec / 60);\n      const currentSec = timeInSec - currentMin * 60;\n      let newTimeInSec = min * 60 + currentSec;\n\n      if (min >= maxTimeInMin) {\n        newTimeInSec = maxTimeInMin * 60;\n      }\n\n      this.setTimeValue(newTimeInSec);\n      return {\n        timeInSec: newTimeInSec,\n      };\n    });\n  };\n\n  onChangeSecField = (value) => {\n    const sec = value || 0;\n    this.setState(({ timeInSec }) => {\n      const currentMin = Math.trunc(timeInSec / 60);\n      const newTimeInSec = currentMin * 60 + sec;\n      this.setTimeValue(newTimeInSec);\n      return {\n        timeInSec: newTimeInSec,\n      };\n    });\n  };\n\n  onSliderChange = (timeInSec) => {\n    this.setState({ timeInSec });\n    this.setTimeValue(timeInSec);\n  };\n\n  render() {\n    // eslint-disable-next-line react/prop-types\n    const { maxSliderInSec, state } = this.props;\n    // eslint-disable-next-line react/prop-types\n    const { timeInSec, startTimeInSec, isStarted } = state;\n    const time = (isStarted) ? startTimeInSec : timeInSec;\n    const minutes = Math.trunc(time / 60);\n    const seconds = time - minutes * 60;\n\n    return (\n      <div>\n        <Space>\n          <span className=\"\">Minutes:</span>\n          <InputNumber\n            name=\"minField\"\n            defaultValue={0}\n            type=\"number\"\n            max={720}\n            min={0}\n            value={minutes}\n            onChange={this.onChangeMinField}\n            disabled={isStarted}\n          />\n          <span className=\"\">Seconds:</span>\n          <InputNumber\n            name=\"secField\"\n            defaultValue={0}\n            type=\"number\"\n            max={59}\n            min={0}\n            value={seconds}\n            onChange={this.onChangeSecField}\n            disabled={isStarted}\n          />\n        </Space>\n        <div className=\"countdown__slider\">\n          <Slider\n            defaultValue={0}\n            max={maxSliderInSec}\n            step={15}\n            onChange={this.onSliderChange}\n            value={typeof timeInSec === 'number' ? timeInSec : 0}\n            disabled={isStarted}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nInputCountdown.defaultProps = {\n  maxTimeInMin: 720,\n  maxSliderInSec: 3600,\n  timeInSec: 0,\n  startTimeInSec: 0,\n  isStarted: false,\n};\n\nInputCountdown.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  maxTimeInMin: PropTypes.number,\n  maxSliderInSec: PropTypes.number,\n  timeInSec: PropTypes.number,\n  startTimeInSec: PropTypes.number,\n  isStarted: PropTypes.bool,\n};\n\nexport default InputCountdown;\n","import React from 'react';\nimport {\n  Button,\n  Space,\n  Divider,\n  Row,\n  Col,\n  Progress,\n} from 'antd';\n\nimport './Countdown.scss';\nimport InputCountdown from '../InputCountdown/InputCountdown';\n\nconst timerSound = require('../../sound/alarm.mp3');\n\nclass Countdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeInSec: 0,\n      isPlay: false,\n      isStarted: false,\n      startTimeInSec: 0,\n    };\n    this.countdownId = null;\n    this.timerSound = new Audio(timerSound);\n  }\n\n  countdown = () => {\n    const { timeInSec } = this.state;\n    if (timeInSec <= 0) {\n      clearInterval(this.countdownId);\n      this.setState({ isPlay: false, isStarted: false });\n      this.timerSound.play();\n    } else {\n      this.setState({ timeInSec: timeInSec - 1 });\n    }\n  };\n\n  start = () => {\n    const { isPlay } = this.state;\n    if (!isPlay) {\n      this.countdownId = setInterval(this.countdown, 1000);\n      this.setState({ isPlay: true, isStarted: true });\n    } else {\n      clearInterval(this.countdownId);\n      this.setState({ isPlay: false });\n    }\n  };\n\n  reset = () => {\n    clearInterval(this.countdownId);\n    this.setState({ isPlay: false, timeInSec: 0, isStarted: false });\n  };\n\n  onChangeTime = (timeInSec) => {\n    this.setState({\n      timeInSec,\n      startTimeInSec: timeInSec,\n    });\n  };\n\n  progressBar = (timeInSec, startTimeInSec) => {\n    const onePercent = (startTimeInSec / 100);\n    return Math.trunc(100 - (timeInSec / onePercent));\n  };\n\n  timeView = (time) => ((time < 10) ? `0${time}` : time);\n\n  render() {\n    const {\n      timeInSec,\n      isPlay,\n      isStarted,\n      startTimeInSec,\n    } = this.state;\n    const minutes = Math.trunc(timeInSec / 60);\n    const seconds = timeInSec - minutes * 60;\n    const progress = (isStarted) ? this.progressBar(timeInSec, startTimeInSec) : 0;\n    const btnText = isPlay ? 'Pause' : 'Play';\n    return (\n      <div>\n        <Row gutter={[10, 10]}>\n          <Col span={10}>\n            <div className=\"countdown__timeview\">\n              {`${this.timeView(minutes)}:${this.timeView(seconds)}`}\n            </div>\n          </Col>\n          <Col span={14}>\n            <div className=\"countdown__progressBar\">\n              <Progress strokeLinecap=\"square\" percent={progress} />\n            </div>\n          </Col>\n        </Row>\n        <Divider />\n        <Row gutter={[10, 10]}>\n          <Col span={24}>\n            <div className=\"countdown__inputsBlock\">\n              <InputCountdown onChange={this.onChangeTime} state={this.state} />\n            </div>\n          </Col>\n        </Row>\n        <Row gutter={[10, 10]}>\n          <Col span={24}>\n            <div className=\"countdown__btnBlock\">\n              <Space>\n                <Button\n                  type=\"primary\"\n                  className=\"countdown__btn\"\n                  onClick={this.start}\n                  disabled={!timeInSec}\n                >\n                  {btnText}\n                </Button>\n                <Button\n                  type=\"primary\"\n                  className=\"countdown__btn\"\n                  onClick={this.reset}\n                  disabled={!timeInSec}\n                  danger\n                >\n                  Reset\n                </Button>\n              </Space>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Countdown;\n","import React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './App.scss';\nimport { Tabs } from 'antd';\nimport Timer from '../Timer/Timer';\nimport Countdown from '../Countdown/Countdown';\n\nconst { TabPane } = Tabs;\n\nclass App extends React.Component {\n  state = {};\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Tabs defaultActiveKey=\"timer\">\n          <TabPane tab=\"Timer\" key=\"timer\">\n            <Timer />\n          </TabPane>\n          <TabPane tab=\"Countdown\" key=\"countdown\">\n            <Countdown />\n          </TabPane>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}